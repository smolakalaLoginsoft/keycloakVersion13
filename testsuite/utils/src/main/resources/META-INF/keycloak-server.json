{

    "hostname": {
        "provider": "${keycloak.hostname.provider:}",

        "default": {
            "frontendUrl": "${keycloak.frontendUrl:}",
            "adminUrl": "${keycloak.adminUrl:}",
            "forceBackendUrlToFrontendUrl": "${keycloak.hostname.default.forceBackendUrlToFrontendUrl:}"
        }
    },

    "eventsStore": {
        "provider": "${keycloak.eventsStore.provider:}"
    },

    "realm": {
        "provider": "${keycloak.realm.provider:jpa}"
    },

    "client": {
        "provider": "${keycloak.client.provider:jpa}"
    },

    "clientScope": {
        "provider": "${keycloak.clientScope.provider:jpa}"
    },

    "group": {
        "provider": "${keycloak.group.provider:jpa}"
    },

    "role": {
        "provider": "${keycloak.role.provider:jpa}"
    },

    "authenticationSessions": {
        "provider": "${keycloak.authSession.provider:infinispan}"
    },

    "mapStorage": {
        "provider": "${keycloak.mapStorage.provider:concurrenthashmap}",
        "concurrenthashmap": {
            "dir": "${project.build.directory:target}"
        }
    },

    "user": {
        "provider": "${keycloak.user.provider:jpa}"
    },

    "userFederatedStorage": {
        "provider": "${keycloak.userFederatedStorage.provider:}"
    },

    "userSessionPersister": {
        "provider": "${keycloak.userSessionPersister.provider:}"
    },

    "authorizationPersister": {
        "provider": "${keycloak.authorization.provider:}"
    },

    "theme": {
        "staticMaxAge": "${keycloak.theme.staticMaxAge:}",
        "cacheTemplates": "${keycloak.theme.cacheTemplates:}",
        "cacheThemes": "${keycloak.theme.cacheThemes:}",
        "folder": {
            "dir": "${keycloak.theme.dir}"
        }
    },

    "connectionsJpa": {
        "default": {
            "url": "${keycloak.connectionsJpa.url:jdbc:h2:mem:test;DB_CLOSE_DELAY=-1}",
            "driver": "${keycloak.connectionsJpa.driver:org.h2.Driver}",
            "driverDialect": "${keycloak.connectionsJpa.driverDialect:}",
            "user": "${keycloak.connectionsJpa.user:sa}",
            "password": "${keycloak.connectionsJpa.password:}",
            "showSql": "${keycloak.connectionsJpa.showSql:}",
            "formatSql": "${keycloak.connectionsJpa.formatSql:}",
            "globalStatsInterval": "${keycloak.connectionsJpa.globalStatsInterval:}"
        }
    },

    "connectionsInfinispan": {
        "default": {
            "jgroupsUdpMcastAddr": "${keycloak.connectionsInfinispan.jgroupsUdpMcastAddr:234.56.78.90}",
            "nodeName": "${keycloak.connectionsInfinispan.nodeName,jboss.node.name:}",
            "siteName": "${keycloak.connectionsInfinispan.siteName,jboss.site.name:}",
            "clustered": "${keycloak.connectionsInfinispan.clustered:}",
            "async": "${keycloak.connectionsInfinispan.async:}",
            "sessionsOwners": "${keycloak.connectionsInfinispan.sessionsOwners:}",
            "l1Lifespan": "${keycloak.connectionsInfinispan.l1Lifespan:}",
            "remoteStoreEnabled": "${keycloak.connectionsInfinispan.remoteStoreEnabled:}",
            "remoteStoreHost": "${keycloak.connectionsInfinispan.remoteStoreServer:}",
            "remoteStorePort": "${keycloak.connectionsInfinispan.remoteStorePort:}",
            "hotrodProtocolVersion": "${keycloak.connectionsInfinispan.hotrodProtocolVersion}",
            "embedded": "${keycloak.connectionsInfinispan.embedded:true}"
        }
    },

    "scripting": {
    },

    "jta-lookup": {
        "provider": "${keycloak.jta.lookup.provider:}"
    },

    "login-protocol": {
        "saml": {
            "knownProtocols": [
                "http=${auth.server.http.port}",
                "https=${auth.server.https.port}"
            ]
        }
    },

    "userProfile": {
        "legacy-user-profile": {
            "read-only-attributes": [ "deniedFoo", "deniedBar*", "deniedSome/thing", "deniedsome*thing" ],
            "admin-read-only-attributes": [ "deniedSomeAdmin" ]
        }
    },

    "x509cert-lookup": {
        "provider": "${keycloak.x509cert.lookup.provider:}",
        "haproxy": {
            "sslClientCert": "x-ssl-client-cert",
            "sslCertChainPrefix": "x-ssl-client-cert-chain",
            "certificateChainLength": 1
        },
        "apache": {
            "sslClientCert": "x-ssl-client-cert",
            "sslCertChainPrefix": "x-ssl-client-cert-chain",
            "certificateChainLength": 1
        },
        "nginx": {
            "sslClientCert": "x-ssl-client-cert",
            "sslCertChainPrefix": "x-ssl-client-cert-chain",
            "certificateChainLength": 1
        }
    }
}
